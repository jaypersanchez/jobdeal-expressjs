// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum JobStatus {
  DRAFT
  PUBLISHED
  HIRING
  HIRED
  CLOSED
}

enum JobTag {
  NORMAL
  FEATURED
}

model User {
  id                Int       @default(autoincrement()) @id
  email             String    @unique
  firstName         String?
  lastName          String?
  mobile            String?
  emailVerifiedAt  DateTime?
  password          String?
  title             String?
  address           String?
  zip               String?
  city              String?
  country           String?
  locale            String?
  avatar            String?
  bankId            String?
  klarnaToken       String?
  role              Role       @default(USER)
  aboutMe           String?
  lat               String?
  lng               String?
  timezone          String?
  categories        Category[]
  jobs              Job[]
  applicants        Applicant[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Category {
  id                Int        @default(autoincrement()) @id
  user              User       @relation(fields: [userId], references: [id])
  userId            Int
  parent            Category?  @relation("children", fields: [parentId], references: [id])
  parentId          Int?
  children          Category[] @relation("children")
  name              String     @unique
  color             String?
  image             String?
  description       String
  jobs              Job[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Job {
  id                Int       @default(autoincrement()) @id
  user              User      @relation(fields: [userId], references: [id])
  userId            Int
  categories        Category[]
  applicants        Applicant[]
  title             String?
  description       String?
  price             Float?
  status            JobStatus @default(DRAFT)
  tag               JobTag    @default(NORMAL)
  address           String?
  lat               String?
  lng               String?
  images            String[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Applicant {
  id                Int       @default(autoincrement()) @id
  user              User      @relation(fields: [userId], references: [id])
  userId            Int
  job               Job       @relation(fields: [jobId], references: [id])
  jobId             Int
  coverLetter       String
  price             Float
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@unique([userId, jobId])
}
