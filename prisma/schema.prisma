// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum JobStatus {
  DRAFT
  PUBLISHED
  HIRING
  HIRED
  CLOSED
}

enum JobTag {
  NORMAL
  FEATURED
}

model User {
  id                Int       @default(autoincrement()) @id
  email             String    @unique
  firstName         String
  lastName          String
  mobile            String?
  email_verified_at DateTime?
  password          String?
  address           String?
  zip               String?
  city              String?
  country           String?
  locale            String?
  avatar            String?
  bank_id           String?
  klarna_token      String?
  role              Role       @default(USER)
  about_me          String?
  lat               String?
  lng               String?
  timezone          String?
  categories        Category[]
  jobs              Job[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Category {
  id                Int        @default(autoincrement()) @id
  user              User       @relation(fields: [userId], references: [id])
  userId            Int
  parent            Category?  @relation("children", fields: [parentId], references: [id])
  parentId          Int?       @map("categoryId")
  children          Category[] @relation("children")
  name              String
  color             String?
  image             String?
  description       String
  jobs              Job[]
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Job {
  id                Int       @default(autoincrement()) @id
  user              User      @relation(fields: [userId], references: [id])
  userId            Int
  categories        Category[]
  title             String?
  description       String?
  price             Float?
  status            JobStatus @default(DRAFT)
  tag               JobTag    @default(NORMAL)
  address           String?
  lat               String?
  lng               String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}